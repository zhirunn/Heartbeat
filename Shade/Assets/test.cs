/*
Generated by UnityTwine on 11/02/2017 3:01:08 PM
https://github.com/daterre/UnityTwine
*/
using UnityEngine;
using System.Collections;
using System.Collections.Generic;
using UnityTwine;

public class test: TwineStory
{
	public override TwineVar this[string name]
	{
		get
		{
			switch(name)
			{
				default: throw new KeyNotFoundException(string.Format("There is no variable with the name '{0}'.", name));
			}
		}
		set
		{
			switch(name)
			{
				default: throw new KeyNotFoundException(string.Format("There is no variable with the name '{0}'.", name));
			}
		}
	}


	void Awake() {
		base.Init();
		passageInit_0();
		passageInit_1();
		passageInit_2();
		passageInit_3();
	}
    
	// .............
	// #0: StoryTitle

	void passageInit_0()
	{
		this.Passages["StoryTitle"] = new TwinePassage("StoryTitle", new string[]{  }, passageExecute_0);
	}

	IEnumerable<TwineOutput> passageExecute_0()
	{
		yield return new TwineText(@"Test");	
	}
    
	// .............
	// #1: Start

	void passageInit_1()
	{
		this.Passages["Start"] = new TwinePassage("Start", new string[]{  }, passageExecute_1);
	}

	IEnumerable<TwineOutput> passageExecute_1()
	{
		yield return new TwineText(@"Start");
		yield return new TwineText(@"");
		yield return new TwineLink(@"no", @"no", @"no", null, null);
		yield return new TwineLink(@"okay...", @"okay...", @"okay...", null, null);	
	}
    
	// .............
	// #2: no

	void passageInit_2()
	{
		this.Passages["no"] = new TwinePassage("no", new string[]{  }, passageExecute_2);
	}

	IEnumerable<TwineOutput> passageExecute_2()
	{
		yield return new TwineText(@"I said no");	
	}
    
	// .............
	// #3: okay...

	void passageInit_3()
	{
		this.Passages["okay..."] = new TwinePassage("okay...", new string[]{  }, passageExecute_3);
	}

	IEnumerable<TwineOutput> passageExecute_3()
	{
		yield return new TwineText(@"I said okay");	
	}

}